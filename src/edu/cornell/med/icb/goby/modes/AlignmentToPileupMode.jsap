<!--
  ~ Copyright (C) 2009-2011 Institute for Computational Biomedicine,
  ~                    Weill Medical College of Cornell University
  ~
  ~  This program is free software; you can redistribute it and/or modify
  ~  it under the terms of the GNU General Public License as published by
  ~  the Free Software Foundation; either version 3 of the License, or
  ~  (at your option) any later version.
  ~
  ~  This program is distributed in the hope that it will be useful,
  ~  but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~  GNU General Public License for more details.
  ~
  ~  You should have received a copy of the GNU General Public License
  ~  along with this program.  If not, see <http://www.gnu.org/licenses/>.
  -->

<jsap>
    <parameters>

        <flaggedOption>
            <id>output</id>
            <shortFlag>o</shortFlag>
            <longFlag>output</longFlag>
            <required>false</required>
            <defaults>
                <string>-</string>
            </defaults>
            <help>The name of the output file.</help>
        </flaggedOption>
        <unflaggedOption>
            <id>input</id>
            <required>true</required>
            <greedy>true</greedy>
            <help>The basenames of the input alignments</help>
        </unflaggedOption>
        <flaggedOption>
            <id>include-reference-names</id>
            <shortFlag>r</shortFlag>
            <longFlag>include-reference-names</longFlag>
            <required>false</required>
            <help>When provided, process only reference identifiers listed in this comma separated list. To process only chromosome 19 and 1, if sequences are identified by 1 and 19, use: --include-reference-names 1,19</help>
        </flaggedOption>
        <flaggedOption>
            <id>format</id>
            <shortFlag>t</shortFlag>
            <longFlag>format</longFlag>
            <required>false</required>
            <defaults>
                <string>Fasta</string>
            </defaults>
            <help>Alignment format to write. Can be one of fasta, one_per_line</help>
        </flaggedOption>
      <flaggedOption>
            <id>start-position</id>
            <shortFlag>s</shortFlag>
            <longFlag>start-position</longFlag>
            <stringParser>
                <classname>StringStringParser</classname>
            </stringParser>
            <required>false</required>
            <help>The start position within the file, which should be number of bytes into the file to start reading from, or a string in the format ref-id,ref-position (since Goby 1.9). Only entries that have a position after the start position are considered.</help>
        </flaggedOption>
        <flaggedOption>
            <id>end-position</id>
            <shortFlag>e</shortFlag>
            <longFlag>end-position</longFlag>
            <stringParser>
                <classname>StringStringParser</classname>
            </stringParser>
            <required>false</required>
            <help>The end position within the file, which should be number of bytes into the file to end reading from, or a string in the format ref-id,ref-position (since Goby 1.9). Only entries that occur before the specified position are analyzed.</help>
        </flaggedOption>
        <flaggedOption>
            <id>start-flap-size</id>
            <longFlag>start-flap-size</longFlag>
            <stringParser>
                <classname>IntegerStringParser</classname>
            </stringParser>
            <defaults>
                <string>100</string>
            </defaults>
            <required>false</required>
            <help>Size of the flap to consider before start-position (in bp). Reads that start within start-flap and start are used to accumulate base counts. Base counts are used to emit statistics between start and end, but not between start-flap and start. This strategy makes is possible to concatenate results from distinct windows without reporting redundant results.</help>
        </flaggedOption>
        <flaggedOption>
            <id>genome</id>
            <longFlag>genome</longFlag>
            <stringParser>
                <classname>StringStringParser</classname>
            </stringParser>
            <required>false</required>
            <help>Filename for the reference genome. If provided, a reference sequence will be written together with the reads in the output. Filename must end with one of the extensions .fa, .fasta, .fa.gz, .fasta.gz or .compact-reads.</help>
        </flaggedOption>
</parameters>
</jsap>
